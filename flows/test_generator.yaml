version: "0.0.2"

metadata:
  name: "test-generator"
  description: "Generates comprehensive test cases for code functions"
  author: "aahnik"
  tags: ["testing", "quality-assurance", "development"]
  private: false

inputs:
  code:
    type: string
    description: "Function or class to generate tests for"
    required: true
    example: "def calculate_discount(price, percentage): return price * (1 - percentage/100)"
  framework:
    type: string
    description: "Testing framework to use"
    required: true
    example: "pytest"

model:
  provider: "anthropic"
  name: "claude-3.5-sonnet"

prompt: |
  You are a testing expert. Generate comprehensive {framework} test cases for this code:

  ```
  {code}
  ```

  Create tests covering:
  1. Happy path scenarios
  2. Edge cases
  3. Error conditions
  4. Boundary values
  5. Performance scenarios
  6. Security concerns

  Include:
  - Test setup and teardown
  - Mocking requirements
  - Test data fixtures
  - Documentation for each test case
  - Coverage considerations
