version: "0.0.2"

metadata:
  name: "performance-optimizer"
  description: "Analyzes and optimizes code for performance"
  author: "aahnik"
  tags: ["performance", "optimization", "profiling"]
  private: false

inputs:
  code:
    type: string
    description: "Code to optimize"
    required: true
    example: "def process_data(items): return [item.upper() for item in items if item.strip()]"
  language:
    type: string
    description: "Programming language"
    required: true
    example: "python"
  performance_goals:
    type: string
    description: "Performance requirements"
    required: true
    example: "Process 1M records under 5 seconds with max 2GB memory"

model:
  provider: "anthropic"
  name: "claude-3.5-sonnet"

prompt: |
  You are a performance optimization expert for {language}. Analyze and optimize this code:

  Performance Goals: {performance_goals}

  ```{language}
  {code}
  ```

  Provide:
  1. Performance analysis
  2. Bottleneck identification
  3. Memory usage analysis
  4. Algorithmic complexity
  5. Optimization recommendations
  6. Optimized code version
  7. Benchmarking approach
  8. Profiling insights

  Consider:
  - Time complexity
  - Space complexity
  - Memory management
  - CPU utilization
  - I/O operations
  - Concurrency opportunities
  - Language-specific optimizations
